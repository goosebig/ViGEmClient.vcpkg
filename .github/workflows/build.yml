name: Build ViGEmClient DLL

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the main repository, just for rerun
    - name: Checkout main repository
      uses: actions/checkout@v3

    # Step 2: Remove existing overlay-ports directoryï¼Œ
    - name: Remove existing overlay-ports directory
      run: |
        if (Test-Path overlay-ports) { Remove-Item -Recurse -Force overlay-ports }

    # Step 3: Clone the ViGEmClient.vcpkg repository
    - name: Clone ViGEmClient.vcpkg
      run: |
        git clone https://github.com/ViGEm/ViGEmClient.vcpkg.git overlay-ports

    # Step 4: Debug overlay-ports directory
    - name: Debug overlay-ports directory
      run: |
        ls overlay-ports || echo "No overlay-ports directory found."
        cat overlay-ports/CONTROL || echo "CONTROL file missing."
        cat overlay-ports/portfile.cmake || echo "portfile.cmake file missing."

    # Step 5: Clone and bootstrap vcpkg
    - name: Setup vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat

    # Step 6: Install ViGEmClient using vcpkg
    - name: Install ViGEmClient
      run: |
        .\vcpkg\vcpkg.exe install vigemclient:x86-windows vigemclient:x64-windows --overlay-ports="${{ github.workspace }}/overlay-ports"

    # Step 7: Debug installed directory
    - name: Debug vcpkg installed directory
      run: |
        ls vcpkg_installed || echo "No vcpkg_installed directory found."
        ls vcpkg_installed/x86-windows || echo "No x86-windows directory found."
        ls vcpkg_installed/x64-windows || echo "No x64-windows directory found."

    # Step 8: Upload DLL artifacts
    - name: Upload DLL artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ViGEmClient-DLL
        path: |
          vcpkg_installed/x86-windows/bin/*.dll
          vcpkg_installed/x64-windows/bin/*.dll
